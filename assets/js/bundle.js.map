{"version":3,"file":"bundle.js","sources":["../../js/components/accordion.js","../../js/components/cookie.js","../../js/components/tabs.js","../../js/components/readMore.js","../../js/components/devices.js"],"sourcesContent":["/**\n * Simple accordion functionality\n *\n * @function run - Initializes the accordion\n *\n * @example\n * // Initialize the accordion\n * accordion.run();\n *\n * // HTML structure with data-attributes\n * <div class=\"accordion\" data-accordion=\"single\" data-accordion-active-class='active'>\n *   <div class=\"accordion__item\" data-accordion-item>\n *     <h2 class=\"accordion__item-title\">Title</h2>\n *     <div class=\"accordion__item-content\">Content</div>\n *   </div>\n * </div>\n */\n\nexport default (function () {\n\n  /**\n   * Initializes all accordions found in the document\n   */\n  const init = () => {\n    const accordions = document.querySelectorAll(\"[data-accordion]\");\n\n    accordions.forEach((accordion) => {\n      setupAccordionItems(accordion);\n    });\n  }\n\n  /**\n   * Sets up event listeners for each accordion item\n   *\n   * @param {HTMLElement} accordion - The accordion container element\n   */\n  const setupAccordionItems = (accordion) => {\n    const items = accordion.querySelectorAll(\"[data-accordion-item]\");\n\n    resetState(accordion);\n\n    items.forEach((item) => {\n      item.addEventListener('click', (event) => handleItemClick(event, accordion));\n    });\n  }\n\n  /**\n   * Handles the click event for an accordion item\n   *\n   * @param {Event} event - The click event\n   * @param {HTMLElement} accordion - The accordion container element\n   */\n  const handleItemClick = (event, accordion) => {\n    const item = event.currentTarget;\n    const itemActiveClass = accordion.dataset.itemActiveClass || 'active';\n    const mode = accordion.dataset.accordion || 'single';\n\n    if (mode === 'single' && !item.classList.contains(itemActiveClass)) {\n      resetState(accordion, itemActiveClass);\n    }\n\n    item.classList.toggle(itemActiveClass);\n  }\n\n  /**\n   * Resets the state of the accordion by removing the active class from all items\n   *\n   * @param {HTMLElement} accordion - The accordion container element\n   * @param {string} [itemActiveClass='active'] - The active class to be removed (optional)\n   */\n  const resetState = (accordion, itemActiveClass = 'active') => {\n    const activeItems = accordion.querySelectorAll(`.${itemActiveClass}[data-accordion-item]`);\n\n    activeItems.forEach((item) => {\n      item.classList.remove(itemActiveClass);\n    });\n  }\n\n  return {\n    run: init,\n  };\n})();\n\n","/**\n * Utility for managing cookies.\n * This module provides functions to set, get, and remove cookies.\n *\n * @module cookie\n *\n * @example\n * // Set a cookie with a 7-day expiration\n * cookie.set('username', 'JohnDoe', 7);\n *\n * // Get the value of a cookie\n * const username = cookie.get('username');\n *\n * // Remove a cookie\n * cookie.remove('username');\n */\nexport default (function () {\n\n  /**\n   * Sets a cookie with the specified name, value, and expiration days.\n   *\n   * @function set\n   * @param {string} name - Name of the cookie.\n   * @param {string} value - Value of the cookie.\n   * @param {number} days - Expiration time in days.\n   */\n  const setCookie = (name, value, days) => {\n    let expires = \"\";\n    if (days) {\n      const date = new Date();\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = `${name}=${value || \"\"}${expires}; path=/`;\n  };\n\n  /**\n   * Gets the value of a cookie by its name.\n   *\n   * @function get\n   * @param {string} name - Name of the cookie.\n   * @returns {string|null} - The value of the cookie or null if not found.\n   */\n  const getCookie = (name) => {\n    const nameEQ = `${name}=`;\n    const cookies = document.cookie.split(';');\n\n    for (let cookieItem of cookies) {\n      cookieItem = cookieItem.trim();\n      if (cookieItem.startsWith(nameEQ)) {\n        return cookieItem.substring(nameEQ.length);\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Removes a cookie by setting its expiration to the past.\n   *\n   * @function remove\n   * @param {string} name - Name of the cookie to remove.\n   */\n  const removeCookie = (name) => {\n    setCookie(name, '', -1);\n  };\n\n  return {\n    set: setCookie,\n    get: getCookie,\n    remove: removeCookie\n  };\n})();\n","/**\n * Utility for tab navigation functionality.\n * This module provides functions to initialize tab navigation and manage tab interactions.\n *\n * @module tabs\n *\n * @example\n * // Initialize the tabs functionality\n * tabs.run();\n *\n * // HTML structure with data-attributes\n * <div class=\"tabs\" data-tabs=\"openByClass\" data-active-button-class=\"active-button\" data-active-content-class=\"active-content\">\n *   <div class=\"tabs__header\">\n *     <span data-tab-button=\"tab1\">Tab 1</span>\n *     <span data-tab-button=\"tab2\">Tab 2</span>\n *     <span data-tab-button=\"tab3\">Tab 3</span>\n *   </div>\n *   <div data-tab-content=\"tab1\">\n *     <h2>Content for Tab 1</h2>\n *     <p>This is the content for Tab 1.</p>\n *   </div>\n *   <div data-tab-content=\"tab2\">\n *     <h2>Content for Tab 2</h2>\n *     <p>This is the content for Tab 2.</p>\n *   </div>\n *   <div data-tab-content=\"tab3\">\n *     <h2>Content for Tab 3</h2>\n *     <p>This is the content for Tab 3.</p>\n *   </div>\n * </div>\n */\n\nexport default (function () {\n  /**\n   * Initializes all tab containers on the page.\n   *\n   * @function init\n   */\n  const init = () => {\n    const tabsContainers = document.querySelectorAll(\"[data-tabs]\");\n    tabsContainers.forEach(initializeTabsInstance);\n  };\n\n  /**\n   * Initializes a specific tab container.\n   *\n   * @function initializeTabs\n   * @param {HTMLElement} container - The tab container element to initialize.\n   */\n  const initializeTabsInstance = (container) => {\n    const buttons = container.querySelectorAll(\"[data-tab-button]\");\n    const contents = container.querySelectorAll(\"[data-tab-content]\");\n    const activeButtonClass = container.dataset.activeButtonClass || 'active';\n    const mode = container.dataset.tabs;\n    const activeContentClass = container.dataset.activeContentClass || 'active';\n\n    buttons.forEach(button => {\n      button.addEventListener(\"click\", () => {\n        activateTab(button, contents, activeButtonClass, activeContentClass);\n      });\n    });\n\n    if (buttons.length > 0) {\n      buttons[0].click();\n    }\n  };\n\n  /**\n   * Activates the selected tab and shows its content.\n   *\n   * @function activateTab\n   * @param {HTMLElement} button - The clicked tab button.\n   * @param {NodeList} contents - All tab content elements.\n   * @param {string} activeButtonClass - The class to apply to the active button.\n   * @param {string} activeContentClass - The class to apply to the active content.\n   */\n  const activateTab = (button, contents, activeButtonClass, activeContentClass) => {\n    const targetContentValue = button.dataset.tabButton;\n\n    button.parentElement.querySelectorAll(\"[data-tab-button]\").forEach(btn => {\n      btn.classList.remove(activeButtonClass);\n    });\n\n    contents.forEach(content => {\n      if (activeContentClass !== 'active') {\n        content.classList.remove(activeContentClass);\n      } else {\n        content.style.display = 'none';\n      }\n    });\n\n    button.classList.add(activeButtonClass);\n\n    const activeContent = [...contents].find(content => content.dataset.tabContent === targetContentValue);\n\n    if (activeContent) {\n      if (activeContentClass !== 'active') {\n        activeContent.classList.add(activeContentClass);\n      } else {\n        activeContent.style.display = 'block';\n      }\n    }\n  };\n\n  return {\n    run: init,\n  };\n})();\n","/**\n * Utility for \"Read More\" toggle functionality\n *\n * @function run - Initializes the readMore.\n *\n * @example\n * // Initialize the \"Read More\" functionality\n * readMore.run();\n *\n * // HTML structure with data-attributes\n * <div class=\"read-more-block\" data-read-more data-read-more-active-class=\"active\">\n *   <div>Content to show/hide</div>\n *   <button data-read-more-toggler data-more-text=\"Read More\" data-less-text=\"Read Less\">Read More</button>\n * </div>\n */\n\nexport default (function () {\n  /**\n   * Initializes all \"Read More\" blocks on the page.\n   */\n  const init = () => {\n    const readMoreBlocks = document.querySelectorAll(\"[data-read-more]\");\n    readMoreBlocks.forEach(initializeBlock);\n  };\n\n  /**\n   * Initializes a specific \"Read More\" block.\n   *\n   * @param {HTMLElement} block - The block to initialize\n   */\n  const initializeBlock = (block) => {\n    const toggler = block.querySelector(\"[data-read-more-toggler]\");\n    if (toggler) {\n      toggler.innerHTML = toggler.dataset.moreText || 'Read More';\n      toggler.addEventListener('click', () => toggleContent(block, toggler));\n    }\n  };\n\n  /**\n   * Toggles the content of the \"Read More\" block and updates the button text.\n   *\n   * @param {HTMLElement} block - The block containing the content\n   * @param {HTMLElement} toggler - The button that toggles the content\n   */\n  const toggleContent = (block, toggler) => {\n    const activeClass = block.dataset.readMoreActiveClass || 'active';\n\n    block.classList.toggle(activeClass);\n    toggler.innerHTML = block.classList.contains(activeClass)\n        ? toggler.dataset.lessText || 'Read Less'\n        : toggler.dataset.moreText || 'Read More';\n  };\n\n  return {\n    run: init,\n  };\n})();\n\n","/**\n * Small helper for detecting device type and orientation\n * @type {{smallMobile, smallMobileLandscape, smallMobilePortrait, mobile, mobileLandscape, mobilePortrait, tablet, tabletLandscape, tabletPortrait, desktop}}\n * @return {Boolean}\n *\n * @example\n * if (devices.mobile()) {\n *  doSomethingOnMobileOnly();\n * }\n */\n\nexport default (function() {\n  let smallMobileLandscape = \"(max-height: 320px) and (orientation: landscape)\";\n  let smallMobilePortrait = \"(max-width: 320px) and (orientation: portrait)\";\n  let smallMobile = \"(max-width: 320px)\";\n\n  let mobileLandscape = \"(max-height: 767px) and (orientation: landscape)\";\n  let mobilePortrait = \"(max-width: 767px) and (orientation: portrait)\";\n  let mobile = \"(max-width: 767px)\";\n\n  let tabletLandscape = \"(min-width: 768px) and (max-width: 1024px) and (orientation: landscape)\";\n  let tabletPortrait = \"(min-width: 768px) and (max-width: 1024px) and (orientation: portrait)\";\n  let tablet = \"(min-width: 768px) and (max-width: 1024px)\";\n\n  let desktop = \"(min-width: 1025px)\";\n\n  return {\n    smallMobile: function() {\n      return window.matchMedia(smallMobile).matches;\n    },\n    smallMobileLandscape: function() {\n      return window.matchMedia(smallMobileLandscape).matches;\n    },\n    smallMobilePortrait: function() {\n      return window.matchMedia(smallMobilePortrait).matches;\n    },\n    mobile: function() {\n      return window.matchMedia(mobile).matches;\n    },\n    mobileLandscape: function() {\n      return window.matchMedia(mobileLandscape).matches;\n    },\n    mobilePortrait: function() {\n      return window.matchMedia(mobilePortrait).matches;\n    },\n    tablet: function() {\n      return window.matchMedia(tablet).matches;\n    },\n    tabletLandscape: function() {\n      return window.matchMedia(tabletLandscape).matches;\n    },\n    tabletPortrait: function() {\n      return window.matchMedia(tabletPortrait).matches;\n    },\n    desktop: function() {\n      return window.matchMedia(desktop).matches;\n    }\n  };\n})();\n"],"names":["accordion","setupAccordionItems","items","querySelectorAll","resetState","forEach","item","addEventListener","event","handleItemClick","currentTarget","itemActiveClass","dataset","classList","contains","toggle","remove","run","document","cookie","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","set","get","nameEQ","cookies","split","cookieItem","trim","startsWith","substring","length","tabs","initializeTabsInstance","container","buttons","contents","activeButtonClass","activeContentClass","button","activateTab","click","targetContentValue","tabButton","parentElement","btn","content","style","display","add","activeContent","find","tabContent","readMore","initializeBlock","block","toggler","querySelector","innerHTML","moreText","toggleContent","activeClass","readMoreActiveClass","lessText","devices","smallMobile","window","matchMedia","matches","smallMobileLandscape","smallMobilePortrait","mobile","mobileLandscape","mobilePortrait","tablet","tabletLandscape","tabletPortrait","desktop"],"mappings":"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"}